{"version":3,"sources":["fBase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/nweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","update","autoFocus","src","alt","faTrash","faPencilAlt","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","orderBy","onSnapshot","snapshot","nweetArray","docs","map","marginTop","Profile","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","getMyNweets","where","get","updateProfile","signOut","push","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","App","init","setInit","setUserObj","onAuthStateChanged","user","Boolean","args","currentUser","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9a04f543.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\n// firebase/firestore 임포트\r\n\r\n\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\r\n  appId: process.env.REACT_APP_APP_ID\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();\r\n\r\n\r\n\r\n","import React, { useState } from 'react';\r\nimport { authService } from '../fBase';\r\n\r\nconst AuthForm = () => {\r\n  const [email, setEmail] = useState('');\r\n        const [password, setPassword] = useState('');\r\n        const [newAccount, setNewAccount] = useState(true);\r\n        const [error, setError] = useState('');\r\n\r\n  const onChange = (event) => {\r\n    const {\r\n        target: {\r\n            name,\r\n            value\r\n        }\r\n    } = event;\r\n    if (name === 'email') {\r\n        setEmail(value)\r\n    } else if (name === 'password') {\r\n        setPassword(value);\r\n    }\r\n};\r\n\r\nconst onSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    try {\r\n        let data;\r\n        if (newAccount) {\r\n            data = await authService.createUserWithEmailAndPassword(email, password);\r\n\r\n        } else {\r\n            data = await authService.signInWithEmailAndPassword(email, password);\r\n        }\r\n        console.log(data);\r\n    } catch (error) {\r\n        setError(error.message);\r\n    }\r\n}\r\n\r\nconst toggleAccount = () => {\r\n    setNewAccount(prev => !prev);\r\n}\r\n  return (\r\n    <>\r\n      <form onSubmit={onSubmit} className=\"container\">\r\n        <input \r\n          name=\"email\"\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          required\r\n          value={email}\r\n          onChange={onChange}\r\n          className=\"authInput\"\r\n        />\r\n        <input\r\n          name=\"password\"\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          required\r\n          value={password}\r\n          onChange={onChange}\r\n          className=\"authInput\"\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          value={newAccount ? 'Create Account' : 'Log in'}\r\n          className=\"authInput authSubmit\"\r\n        />\r\n      </form>\r\n      {error && <span className=\"authError\">{error}</span>}\r\n      <span onClick={toggleAccount} className=\"authSwitch\">\r\n        {newAccount ? 'Sign in' : 'Create Account'}\r\n      </span>\r\n    </>\r\n  )\r\n}\r\nexport default AuthForm","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faTwitter,\r\n  faGoogle,\r\n  faGithub,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\nimport {authService, firebaseInstance} from '../fBase';\r\nimport AuthForm from '../components/AuthForm';\r\n\r\nconst Auth = () => {\r\n        const onSocialClick = async(event) => {\r\n          const {target:{name}} = event;\r\n          let provider;\r\n          if(name==='google') {\r\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n\r\n          } else if (name ==='github') {\r\n            provider = new firebaseInstance.auth.GithubAuthProvider();\r\n          }\r\n          await authService.signInWithPopup(provider);\r\n        }\r\n  return (\r\n    <div className=\"authContainer\">\r\n      <FontAwesomeIcon\r\n        icon={faTwitter}\r\n        color={\"#04AAFF\"}\r\n        size=\"3x\"\r\n        style={{ marginBottom: 30 }}\r\n      />\r\n      <AuthForm />\r\n      <div className=\"authBtns\">\r\n        <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\r\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\r\n          </button>\r\n          <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\r\n          Continue with Github <FontAwesomeIcon icon={faGithub} />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Auth;","import React,{useState} from 'react';\r\nimport { dbService, storageService } from '../fBase';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Nweet = ({nweetObj, isOwner}) => {\r\n  const [editing, setEditing] = useState(false);\r\n  const [newNweet, setNewNweet] = useState(nweetObj.text)\r\n  const onDeleteClick = async () => {\r\n    const ok = window.confirm('삭제하겠습니다. ok?');\r\n    if(ok){\r\n      //delete\r\n      await dbService.doc(`nweets/${nweetObj.id}`).delete();\r\n      await storageService.refFromURL(nweetObj.attachmentUrl).delete();\r\n    } else {\r\n      // not delete\r\n\r\n    }\r\n  };\r\n  const toggleEditing = () => setEditing((prev) => !prev);\r\n  const onSubmit = async (event) => {\r\n    console.log(nweetObj, newNweet)\r\n    event.preventDefault();\r\n    await dbService.doc(`nweets/${nweetObj.id}`).update({\r\n      text:newNweet\r\n    })\r\n    setEditing(false);\r\n  }\r\n  const onChange = (event) => {\r\n    const {target: {value}} = event;\r\n    setNewNweet(value);\r\n  }\r\n  return (\r\n    <div className=\"nweet\">\r\n      {editing ? (\r\n        <>\r\n          {isOwner &&\r\n            <>\r\n              <form onSubmit={onSubmit} className=\"container nweetEdit\">\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Edit your nweet\"\r\n                  value={newNweet}\r\n                  required\r\n                  autoFocus\r\n                  onChange={onChange}\r\n                  className=\"formInput\"\r\n                />\r\n                <input\r\n                  type=\"submit\"\r\n                  value=\"Update Nweet\"\r\n                  className=\"formBtn\"\r\n                />\r\n              </form>\r\n              <button>edit</button>\r\n              <button onClick={toggleEditing}>cancel</button>\r\n              <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n                Cancel\r\n              </span>\r\n        </>}\r\n          \r\n        </>\r\n      ) : (\r\n        <>\r\n          <div>\r\n              <h4>{nweetObj.text}</h4>\r\n              {nweetObj.attachmentUrl && <img src={nweetObj.attachmentUrl} alt={nweetObj.text} />}\r\n              {isOwner && (\r\n                <div className=\"nweet__actions\">\r\n                  <span onClick={onDeleteClick}>\r\n                    <FontAwesomeIcon icon={faTrash} />\r\n                  </span>\r\n                  <span onClick={toggleEditing}>\r\n                    <FontAwesomeIcon icon={faPencilAlt} />\r\n                  </span>\r\n                </div>\r\n              )}\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  )\r\n};\r\n\r\n\r\nexport default Nweet;","import React, { useState } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { dbService, storageService } from '../fBase';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst NweetFactory = ({ userObj}) => {\r\n  const [nweet, setNweet] = useState('');\r\n  const [attachment, setAttachment] = useState('');\r\n\r\n  const onSubmit = async(event) => {\r\n    if (nweet === \"\") {\r\n      return;\r\n    }\r\n    event.preventDefault();\r\n    let attachmentUrl = '';\r\n    if(attachment !== '') {\r\n      const attachmentRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\r\n      const response = await attachmentRef.putString(attachment, 'data_url');\r\n      attachmentUrl = await response.ref.getDownloadURL();\r\n    }\r\n    const nweetObj = {\r\n      text:nweet,\r\n      createdAt:Date.now(),\r\n      creatorId:userObj.uid,\r\n      attachmentUrl\r\n    };\r\n    await dbService.collection('nweets').add(nweetObj);\r\n    setAttachment('');\r\n    setNweet('');\r\n    \r\n  };\r\n  const onChange = (event) => {\r\n    const{\r\n      target:{ value },\r\n    } = event;\r\n    setNweet(value);\r\n  };\r\n  const onFileChange = (event) => {\r\n    const {target:{ files },}= event;\r\n    const theFile = files[0];\r\n\r\n    const reader = new FileReader();\r\n    reader.onloadend = (finishedEvent) => {\r\n      const {currentTarget : {result}} = finishedEvent;\r\n      setAttachment(result)\r\n    }\r\n    reader.readAsDataURL(theFile);\r\n  }\r\n\r\n  const onClearAttachment = (event) => {\r\n    event.preventDefault();\r\n    setAttachment(\"\");\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={onSubmit} className=\"factoryForm\">\r\n      <div className=\"factoryInput__container\">\r\n        <input\r\n          className=\"factoryInput__input\"\r\n          value={nweet}\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          placeholder=\"What's on your mind?\"\r\n          maxLength={120}\r\n        />\r\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n      </div>\r\n      <label for=\"attach-file\" className=\"factoryInput__label\">\r\n        <span>Add photos</span>\r\n        <FontAwesomeIcon icon={faPlus} />\r\n      </label>\r\n        <input\r\n        id=\"attach-file\"\r\n        type=\"file\"\r\n        accept=\"image/*\"\r\n        onChange={onFileChange}\r\n        style={{\r\n          opacity: 0,\r\n        }}\r\n        />\r\n        \r\n        {attachment &&\r\n          <>\r\n            <div className=\"factoryForm__attachment\">\r\n              <img\r\n                alt=\"test\"\r\n                src={attachment}\r\n                style={{\r\n                  backgroundImage: attachment,\r\n                }}\r\n              />\r\n              <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n                <span>Remove</span>\r\n                <FontAwesomeIcon icon={faTimes} />\r\n              </div>\r\n            </div>\r\n          </>\r\n        }\r\n      </form>\r\n  )\r\n}\r\n\r\nexport default NweetFactory;","import React, { useEffect, useState } from 'react'\r\nimport { dbService } from '../fBase';\r\nimport Nweet from '../components/Nweet'\r\nimport NweetFactory from '../components/nweetFactory';\r\n\r\nconst Home = ({userObj}) =>{\r\n  \r\n  const [nweets, setNweets] = useState([]);\r\n\r\n  useEffect(() => {\r\n    dbService.collection('nweets').orderBy(\"createdAt\",\"desc\").onSnapshot(snapshot => {\r\n      const nweetArray = snapshot.docs.map((doc) => ({\r\n        id: doc.id,\r\n        ...doc.data(),\r\n      }));\r\n      console.log(nweetArray);\r\n      setNweets(nweetArray)\r\n    })\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <NweetFactory userObj={userObj} />\r\n      <div style={{ marginTop: 30 }}>\r\n        {nweets.map(nweet => (\r\n          <Nweet\r\n            key={nweet.id}\r\n            nweetObj={nweet}\r\n            isOwner={nweet.creatorId === userObj.uid}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;","import React, { useEffect, useState } from 'react';\r\nimport { authService, dbService } from '../fBase';\r\nimport {useHistory} from 'react-router-dom';\r\n\r\nfunction Profile({ userObj, refreshUser }) {\r\n  const history = useHistory();\r\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n  \r\n  const onLogOutClick = () => {\r\n    authService.signOut();   \r\n    history.push('/');\r\n  }\r\n  const getMyNweets = async() => {\r\n    await dbService\r\n      .collection('nweets')\r\n      .where('creatorId', '==', userObj.uid)\r\n      .orderBy('createdAt', 'desc')\r\n      .get();\r\n  }\r\n\r\n  useEffect(() => {\r\n    getMyNweets();\r\n  }, []);\r\n\r\n  const onSubmit = async(event) => {\r\n    event.preventDefault();\r\n    if(userObj.displayName !== newDisplayName) {\r\n      await userObj.updateProfile({displayName : newDisplayName});\r\n      refreshUser();\r\n    }\r\n  }\r\n  const onChange = (event) => {\r\n    const {\r\n      target: {value},\r\n    } = event;\r\n    setNewDisplayName(value);\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <form onSubmit={onSubmit} className=\"profileForm\">\r\n        <input onChange={onChange} type=\"text\" placeholder=\"display name\" value={newDisplayName} autoFocus className=\"formInput\"/>\r\n        <input\r\n          type=\"submit\"\r\n          value=\"Update Profile\"\r\n          className=\"formBtn\"\r\n          style={{\r\n            marginTop: 10,\r\n          }}\r\n        />\r\n      </form>\r\n      <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n        Log Out\r\n      </span>\r\n    </div>\r\n  )\r\n}\r\nexport default Profile;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Navigation= ({userObj}) => <nav>\r\n  <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\r\n    <li>\r\n      <Link to=\"/\" style={{ marginRight: 10 }}>\r\n        <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\r\n      </Link>\r\n    </li>\r\n    <li>\r\n      <Link\r\n          to=\"/profile\"\r\n          style={{\r\n            marginLeft: 10,\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n            fontSize: 12,\r\n          }}\r\n        >\r\n          <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\r\n          <span style={{ marginTop: 10 }}>\r\n            {userObj.displayName\r\n              ? `${userObj.displayName}의 Profile`\r\n              : \"Profile\"}\r\n          </span>\r\n        </Link>\r\n    </li>\r\n  </ul>\r\n</nav>\r\n  \r\nexport default Navigation;","import React, { useState } from 'react';\r\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\r\n\r\nimport Auth from '../routes/Auth';\r\nimport Home from '../routes/Home';\r\nimport Profile from '../routes/Profile';\r\n\r\nimport Navigation from './Navigation';\r\n\r\nconst AppRouter = ({refreshUser, isLoggedIn, userObj}) => {\r\n  \r\n  return(\r\n    <Router>\r\n      {isLoggedIn && <Navigation userObj={userObj}/>}\r\n      <Switch>\r\n        {isLoggedIn \r\n          ? <div\r\n              style={{\r\n                maxWidth: 890,\r\n                width: \"100%\",\r\n                margin: \"0 auto\",\r\n                marginTop: 80,\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n              }}\r\n            >\r\n                <Route exact path='/'><Home userObj={userObj} /></Route>\r\n                <Route exact path='/profile'><Profile userObj={userObj} refreshUser={refreshUser} /></Route>\r\n            </div>\r\n          : <>\r\n            <Route exact path='/'><Auth /></Route>\r\n          </>}\r\n      </Switch>\r\n    </Router>\r\n  )\r\n}\r\n\r\n// <> </> 빈꺽쇠 : fragment\r\n// 여러 가지 요소를 한 페이지에서 렌더링 하고 싶은데,\r\n// html 요소로 묶기는 싫을 때 사용\r\n\r\nexport default AppRouter;","import React, { useEffect, useState } from 'react';\nimport AppRouter from './Router';\nimport {authService} from '../fBase';\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if(user) {\n        Boolean(userObj);\n        setUserObj({\n          displayName:user.displayName,\n          uid:user.uid,\n          updateProfile:(args) => user.updateProfile(args)\n        })\n      } else {\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n    \n  },[]);\n\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName:user.displayName,\n      uid:user.uid,\n      updateProfile:(args) => user.updateProfile(args)\n    });\n  }\n  return (\n    <>\n    {init ? <AppRouter refreshUser={refreshUser} isLoggedIn = {Boolean(userObj)} userObj={userObj} />: 'initializing...'}\n    <footer>test</footer>\n  </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport \"./styles.css\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  \n  document.getElementById('root')\n  \n);\n\n"],"sourceRoot":""}